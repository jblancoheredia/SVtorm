nextflow_process {
    name "Test Process IANNOTATESV"
    script "../main.nf"
    process "IANNOTATESV"
    
    tag "modules"
    tag "modules_nfcore"
    tag "iannotatesv"

    test("iannotatesv - vcf") {
        when {
            process {
                """
                input[0] = [
                    [ id:'test', patient:'patient1' ],
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf_tbi'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_tsv'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_input'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }

    test("iannotatesv - vcf - stub") {
        options "-stub"
        
        when {
            process {
                """
                input[0] = [
                    [ id:'test', patient:'patient1' ],
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_vcf_tbi'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_tsv'], checkIfExists: true),
                    file(params.test_data['homo_sapiens']['illumina']['test_sv_input'], checkIfExists: true)
                ]
                """
            }
        }

        then {
            assertAll(
                { assert process.success },
                { assert snapshot(process.out).match() }
            )
        }
    }
}